[{"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/index.js":"1","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/App.js":"2","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/reportWebVitals.js":"3","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Player.js":"4","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Song.js":"5","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Library.js":"6","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/LibrarySong.js":"7","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Nav.js":"8","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/data.js":"9"},{"size":479,"mtime":1609187612140,"results":"10","hashOfConfig":"11"},{"size":3132,"mtime":1609362530473,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609187198364,"results":"13","hashOfConfig":"11"},{"size":3639,"mtime":1609302175944,"results":"14","hashOfConfig":"11"},{"size":374,"mtime":1609362616300,"results":"15","hashOfConfig":"11"},{"size":768,"mtime":1609285711361,"results":"16","hashOfConfig":"11"},{"size":1006,"mtime":1609300247308,"results":"17","hashOfConfig":"11"},{"size":446,"mtime":1609285108734,"results":"18","hashOfConfig":"11"},{"size":2909,"mtime":1609293291678,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ccgb4i",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/index.js",[],["41","42"],"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/App.js",["43"],"//importing our components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Importing CSS\nimport \"./styles/app.scss\";\n//Import Data info\nimport data from \"./data\";\n//State\nimport { useState, useRef } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nfunction App() {\n  //useRef\n  const audioRef = useRef(null); //null is the starting value\n  //State\n  const [songs, setSongs] = useState(data()); //all of our songs\n  const [currentSong, setCurrentSong] = useState(songs[0]); //this grabs the first song of the array of objects\n  const [isPlaying, setIsPlaying] = useState(false); //is this song playing, yes or no?\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate percentage of song\n    const roundedCurrent = Math.round(current); //getting rid of all the decimals\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    }); //updating our state\n    //update the currentTime to the variable \"current\" and the \"duration\" variable\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id); //means we are on that song\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]); //just adding 1 to the index // if you get to the same number 8 % 8 go back to 0\n    if (isPlaying) audioRef.current.play();\n  };\n  /////////////////////////////////////////////////////////////////////////\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      {/* returning our components and passing our state to our component */}\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        audioRef={audioRef}\n        currentSong={currentSong}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        // passing the mp3 audio\n        src={currentSong.audio}\n        onTimeUpdate={timeUpdateHandler} //runs everytime the time changes in the audio\n        onLoadedMetadata={timeUpdateHandler} //set up the end time once page gets loaded\n        ref={audioRef}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/reportWebVitals.js",[],"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Player.js",[],"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Song.js",[],"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Library.js",[],"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/LibrarySong.js",[],["44","45"],"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/components/Nav.js",[],"/Users/isaac/Documents/AfterDojo/DevEd-Projects/music-player-02/musicplayer-jsx/src/data.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":12,"column":10,"nodeType":"52","messageId":"53","endLine":12,"endColumn":17},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'library' is defined but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]